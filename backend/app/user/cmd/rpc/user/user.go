// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user

import (
	"context"

	"Table/app/user/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoadInfoReq   = pb.LoadInfoReq
	LoadInfoResp  = pb.LoadInfoResp
	UserInfoReq   = pb.UserInfoReq
	UserInfoResp  = pb.UserInfoResp
	UserLoginReq  = pb.UserLoginReq
	UserLoginResp = pb.UserLoginResp

	User interface {
		Login(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error)
		GetInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
		LoadInfo(ctx context.Context, in *LoadInfoReq, opts ...grpc.CallOption) (*LoadInfoResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Login(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) GetInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetInfo(ctx, in, opts...)
}

func (m *defaultUser) LoadInfo(ctx context.Context, in *LoadInfoReq, opts ...grpc.CallOption) (*LoadInfoResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.LoadInfo(ctx, in, opts...)
}
